package com.ting.domain;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.ting.domain.base.BaseQuotation;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Quotation extends BaseQuotation<Quotation> {
	public static final Quotation dao = new Quotation();

    // status:
    // 0 : 新询价,商家未读
    // 1 : 商家已读
    // 2 : 商家报价,用户未读
    // 3 : 用户已读

    public Page<Quotation> listQuotation(Long userId, Long queryid, Integer type, Integer pageNo, Integer pageSize, Integer isDesc){
        String desc = isDesc==1?"":" desc";
        Db.update("update destoon_quotation set status=-1 where fromid=? and addtime<date_sub(now(), interval 1 hour)",userId);
//        Db.update("update destoon_quotation set status=3 where fromid=? and status=2",userId);
        Page<Quotation> page;
        if(type == null){
            page = dao.paginate(pageNo, pageSize,"select *","from destoon_quotation where queryid=? order by id"+desc, queryid);
        }else if(type == 0){
            page = dao.paginate(pageNo, pageSize,"select *","from destoon_quotation where queryid=? and price is null order by id"+desc, queryid);
        }else{
            page = dao.paginate(pageNo, pageSize,"select *","from destoon_quotation where queryid=? and price is not null order by id"+desc, queryid);
        }
        return page;
    }

    public Page<Quotation> listByBoss(Long userId, Integer type, Integer pageNo, Integer pageSize, String order, Integer isDesc){
        String desc = isDesc==1?"":" desc";
        Db.update("update destoon_quotation set status=1 where toid=? and status=0",userId);
        Page<Quotation> page;
        if(type == null){
            page = dao.paginate(pageNo, pageSize,"select *","from destoon_quotation where toid=? order by "+order+desc, userId);
        }else if(type == 0){
            page = dao.paginate(pageNo, pageSize,"select *","from destoon_quotation where toid=? and status >=0 and price is null order by "+order+desc, userId);
        }else{
            page = dao.paginate(pageNo, pageSize,"select *","from destoon_quotation where toid=? and status >=0 and price is not null order by "+order+desc, userId);
        }

        return page;
    }

    public Page<Quotation> listByCustomer(Long userId, Integer type, Integer pageNo, Integer pageSize, String order, Integer isDesc){
        String desc = isDesc==1?"":" desc";
        Db.update("update destoon_quotation set status=-1 where fromid=? and addtime<date_sub(now(), interval 1 hour)",userId);
        Db.update("update destoon_quotation set status=3 where fromid=? and status=2",userId);
        Page<Quotation> page ;
        if(type == null){
            page = dao.paginate(pageNo, pageSize,"select *","from destoon_quotation where fromid=? order by "+order+desc, userId);
        }else if(type == 0){
            page = dao.paginate(pageNo, pageSize,"select *","from destoon_quotation where fromid=? and status >=0 and price is null order by "+order+desc, userId);
        }else{
            page = dao.paginate(pageNo, pageSize,"select *","from destoon_quotation where fromid=? and status >=0 and price is not null order by "+order+desc, userId);
        }

        return page;
    }

    public Integer update(long id, double price){
        Quotation vo = dao.findById(id);
        if(vo.getStatus() != 0 && vo.getStatus() != 1){
            return 0;
        }
        vo.setPrice(new BigDecimal(price));
        vo.setUpdatetime(new Date());
        vo.setStatus(2);
        return vo.update() ? 1 : 0;
    }


}
